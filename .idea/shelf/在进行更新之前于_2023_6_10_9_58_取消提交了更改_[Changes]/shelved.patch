Index: 练习.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># print(\"What's your name?\")\r\n# name = input()\r\n# print(\"Your name is %s\"%name)\r\n# print(\"How old are you?\")\r\n# age = int(input())\r\n# print(\"your age is\"+ str(age))\r\n# print(\"your age is %s\"%age)\r\n# print(\"your age is {}\".format(age))\r\n# print(\"you name is {0},you age is {1}\".format(name,age))\r\n# list = [1,2,3,4,\"a\",\"b\",\"c\",'a','b','c']\r\n# print(list)\r\n# # 一个字符串\r\n# print(\"dahai\"+\"dsd\")\r\n# # 两个字符串\r\n# print(\"dahai\",\"dad\")\r\n# stra = \"The real brave man\"\r\n# strb = \"dare to face the wretched\"\r\n# strc = \"and hopeless society and life.\"\r\n# list1 = [stra,strb,strc]\r\n# print(list1)\r\n# print(stra+strb+strc)\r\n# print(stra,strb,strc)\r\n# print(\"\".join(list1)) #一个字符串\r\n# print(\",\".join(list1)) #用逗号分隔字符\r\n# print(\"**********\".join(list1)) #用*分隔字符\r\n\r\n\r\n#字符串的“改”\r\nmsg1 = \"abc\"\r\nprint(id(msg1))\r\nprint(msg1.lower())\r\nprint(id(msg1.lower()))\r\nprint(msg1.upper())\r\nprint(msg1.islower()) #判断字符串中的值是否全是小写\r\nprint(msg1.upper().isupper())  #判断字符串中的值是否全部为大写\r\nstrd = \"0123456789\"\r\nprint(strd[0:-1])   # 输出第一个到倒数第二个的所有字符\r\nprint(strd[0])      # 输出字符串第一个字符\r\nprint(strd[2:5])\r\nprint(strd[1:8:2])  #输出从第二个开始到第八个，每隔一个的字符（步长为2）\r\nprint(\"\\n\")\r\nprint(strd * 2)\r\na =123\r\nprint(isinstance(a,int))\r\nIntA = 21\r\nIntB = 10\r\nIntC = 0\r\nif ( IntA == IntB):\r\n    print(\"IntA = IntB\")\r\nelse:\r\n    print(\"IntA != IntB\")\r\nlist2 = [1,2,3,4,5,6,7,8,9,0]\r\nif ( IntA in list2):\r\n    print('IntA在列表list2中')\r\nelse:\r\n    print('IntA不在列表list2中')\r\nx = True\r\ny = False\r\nz = False\r\nif x or y and z :   #先计算 y and z 返回False ,然后 x or False ,返回True \r\n    print(\"Yes\")\r\nelse:\r\n    print(\"No\")\r\n\r\n#更新字符串\r\nvar1 = \"Hello World!\"\r\nprint(var1)\r\nprint(\"Hello\\b World!\")\r\nprint(\"已经将字符串更新为：\",var1[:6]+\"Runoob!\")\r\nlist11 = ['Google', 'Runoob', 1997, 2000, 2023]\r\nlist12 = [1, 2, 3, 4, 5 ]\r\nlist13 = [\"a\", \"b\", \"c\", \"d\"]\r\nlist14 = ['red', 'green', 'blue', 'yellow', 'white', 'black']\r\nprint(list11[0])\r\nprint(list11[1])\r\nprint(list11[2])\r\nprint(list11[3])\r\ntup1 = (50)\r\nprint(type(tup1))\r\n#元组中的元素值是不允许修改的，但我们可以对元组进行连接组合，如下实例:\r\ntup2 = (10, 11 , 12 ,20)\r\ntup3 = (\"a\" , \"b\" , \"c\")\r\ntup4 = tup2 + tup3\r\nprint(tup4)\r\nprint(min(tup2))\r\nprint(max(tup2))\r\nprint(len(tup2)) #计算元组元素个数\r\n\r\n\r\n#字典，字典值可以是任何的 python 对象，既可以是标准的对象，也可以是用户定义的，但键不行。\r\n\r\n# 两个重要的点需要记住：\r\n# 1）不允许同一个键出现两次。创建时如果同一个键被赋值两次，后一个值会被记住\r\ntinydict1 = {\"A\" : 123, 98.6 : 37 , \"B\" : 456}\r\nprint(tinydict1)\r\nprint(len(tinydict1))\r\nprint(tinydict1[\"A\"]) #输出“A”的值\r\nprint(tinydict1[\"B\"] , tinydict1[98.6])\r\ntinydict1[\"A\"] = 123123  #修改\r\ntinydict1[\"C\"] = 456456  #添加信息\r\ndel tinydict1[98.6]       #删除键\r\nprint(tinydict1)\r\n\r\n#集合：\r\n#将元素 x 添加到集合 s 中，如果元素已存在，则不进行任何操作。\r\nthisset = set((\"Google\" , \"Ruoob\" , \"Taobao\"))\r\nthisset.add(\"Facebook\")\r\nprint(thisset)\r\n\r\n\r\n\r\n#条件控制\r\n\r\n#if\r\nage1 = int(input(\"Your dog's age:\"))\r\nprint(\"\")\r\nif age1 <= 0:\r\n    print(\"Are you kidding me?\")\r\nelif age1 == 1:\r\n    print(\"Equivalent to a 14-year-old man\")\r\nelif age1 == 2:\r\n    print(\"Equivalent to a 22-year-old man\")\r\nelif age1 > 2 :\r\n    human = 22 + (age1 - 2) * 5\r\n    print(\"Equivalent to a \",human,\"-year-old man\")\r\ninput(\"click enter exit\")\r\n\r\n\r\n#循环语句\r\n#while python中没有do while 循环语句\r\na = 1\r\nwhile a < 10:\r\n    print(a)\r\n    a += 1\r\n\r\n\r\n#用while循环计算从1到100所有整数的和\r\nn = 100\r\nsum1 = 0\r\ncounter1 = 1\r\nwhile counter1 <= n :\r\n    sum1 = sum1 + counter1\r\n    counter1 += 1\r\nprint(\"1 到 %d 之和为：%d\"%( n , sum1))\r\n\r\n\r\n#while 中使用break:\r\nn1 = 5\r\nwhile n1 > 0:\r\n    n1 +=1\r\n    if n1 >= 200:\r\n        break\r\n    print(n1)\r\nprint(\"While is over\")\r\n\r\n\r\n#在while中使用continue:\r\nn2 = 500\r\nwhile n2 > 0:\r\n    n2 -= 1\r\n    if n2 <= 10:\r\n        continue\r\n    print(n2)\r\nprint(\"While is over\")\r\n\r\n\r\n#for 循环语句\r\nsites11 = [\"Baidu\", \"Google\", \"Runoob\", \"Taobao\"]\r\nfor site in sites11:\r\n    print(site)\r\n\r\nworld1 = \"1234567890\"\r\nfor letter in world1:\r\n    print(letter)\r\n\r\nfor number in range(1, 11):\r\n    print(number)\r\n\r\n\r\nfor x in range(101):\r\n    print(x)\r\nelse:\r\n    print(\"Finally finished!\")
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/练习.py b/练习.py
--- a/练习.py	(revision 5fd18e0791ec6f239380b16d6c3ca721d1b88955)
+++ b/练习.py	(date 1686297664757)
@@ -25,93 +25,90 @@
 # print("**********".join(list1)) #用*分隔字符
 
 
-#字符串的“改”
+# 字符串的“改”
 msg1 = "abc"
 print(id(msg1))
 print(msg1.lower())
 print(id(msg1.lower()))
 print(msg1.upper())
-print(msg1.islower()) #判断字符串中的值是否全是小写
-print(msg1.upper().isupper())  #判断字符串中的值是否全部为大写
+print(msg1.islower())  # 判断字符串中的值是否全是小写
+print(msg1.upper().isupper())  # 判断字符串中的值是否全部为大写
 strd = "0123456789"
-print(strd[0:-1])   # 输出第一个到倒数第二个的所有字符
-print(strd[0])      # 输出字符串第一个字符
+print(strd[0:-1])  # 输出第一个到倒数第二个的所有字符
+print(strd[0])  # 输出字符串第一个字符
 print(strd[2:5])
-print(strd[1:8:2])  #输出从第二个开始到第八个，每隔一个的字符（步长为2）
+print(strd[1:8:2])  # 输出从第二个开始到第八个，每隔一个的字符（步长为2）
 print("\n")
 print(strd * 2)
-a =123
-print(isinstance(a,int))
+a = 123
+print(isinstance(a, int))
 IntA = 21
 IntB = 10
 IntC = 0
-if ( IntA == IntB):
+if IntA == IntB:
     print("IntA = IntB")
 else:
     print("IntA != IntB")
-list2 = [1,2,3,4,5,6,7,8,9,0]
-if ( IntA in list2):
+list2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]
+if IntA in list2:
     print('IntA在列表list2中')
 else:
     print('IntA不在列表list2中')
 x = True
 y = False
 z = False
-if x or y and z :   #先计算 y and z 返回False ,然后 x or False ,返回True 
+if x or y and z:  # 先计算 y and z 返回False ,然后 x or False ,返回True
     print("Yes")
 else:
     print("No")
 
-#更新字符串
+# 更新字符串
 var1 = "Hello World!"
 print(var1)
 print("Hello\b World!")
-print("已经将字符串更新为：",var1[:6]+"Runoob!")
-list11 = ['Google', 'Runoob', 1997, 2000, 2023]
-list12 = [1, 2, 3, 4, 5 ]
+print("已经将字符串更新为：", var1[:6] + "Ru noob!")
+list11 = ['Google', 'Ru noob', 1997, 2000, 2023]
+list12 = [1, 2, 3, 4, 5]
 list13 = ["a", "b", "c", "d"]
 list14 = ['red', 'green', 'blue', 'yellow', 'white', 'black']
 print(list11[0])
 print(list11[1])
 print(list11[2])
 print(list11[3])
-tup1 = (50)
+tup1 = 50
 print(type(tup1))
-#元组中的元素值是不允许修改的，但我们可以对元组进行连接组合，如下实例:
-tup2 = (10, 11 , 12 ,20)
-tup3 = ("a" , "b" , "c")
+# 元组中的元素值是不允许修改的，但我们可以对元组进行连接组合，如下实例:
+tup2 = (10, 11, 12, 20)
+tup3 = ("a", "b", "c")
 tup4 = tup2 + tup3
 print(tup4)
 print(min(tup2))
 print(max(tup2))
-print(len(tup2)) #计算元组元素个数
+print(len(tup2))  # 计算元组元素个数
 
-
-#字典，字典值可以是任何的 python 对象，既可以是标准的对象，也可以是用户定义的，但键不行。
+# 字典，字典值可以是任何的 python 对象，既可以是标准的对象，也可以是用户定义的，但键不行。
 
 # 两个重要的点需要记住：
 # 1）不允许同一个键出现两次。创建时如果同一个键被赋值两次，后一个值会被记住
-tinydict1 = {"A" : 123, 98.6 : 37 , "B" : 456}
-print(tinydict1)
-print(len(tinydict1))
-print(tinydict1["A"]) #输出“A”的值
-print(tinydict1["B"] , tinydict1[98.6])
-tinydict1["A"] = 123123  #修改
-tinydict1["C"] = 456456  #添加信息
-del tinydict1[98.6]       #删除键
-print(tinydict1)
+TinyDict1 = {"A": 123, 98.6: 37, "B": 456}
+print(TinyDict1)
+print(len(TinyDict1))
+print(TinyDict1["A"])  # 输出“A”的值
+print(TinyDict1["B"], TinyDict1[98.6])
+TinyDict1["A"] = 123123  # 修改
+TinyDict1["C"] = 456456  # 添加信息
+del TinyDict1[98.6]  # 删除键
+print(TinyDict1)
 
-#集合：
-#将元素 x 添加到集合 s 中，如果元素已存在，则不进行任何操作。
-thisset = set(("Google" , "Ruoob" , "Taobao"))
-thisset.add("Facebook")
-print(thisset)
-
-
+# 集合：
+# 将元素 x 添加到集合 s 中，如果元素已存在，则不进行任何操作。
+ThisSet = {"Google", "Ruoob", "Taobao"}
+ThisSet.add("Facebook")
+print(ThisSet)
 
-#条件控制
+# 条件控制
 
-#if
+# if
 age1 = int(input("Your dog's age:"))
 print("")
 if age1 <= 0:
@@ -120,41 +117,37 @@
     print("Equivalent to a 14-year-old man")
 elif age1 == 2:
     print("Equivalent to a 22-year-old man")
-elif age1 > 2 :
+elif age1 > 2:
     human = 22 + (age1 - 2) * 5
-    print("Equivalent to a ",human,"-year-old man")
+    print("Equivalent to a ", human, "-year-old man")
 input("click enter exit")
 
-
-#循环语句
-#while python中没有do while 循环语句
+# 循环语句
+# while python中没有do while 循环语句
 a = 1
 while a < 10:
     print(a)
     a += 1
 
-
-#用while循环计算从1到100所有整数的和
+# 用while循环计算从1到100所有整数的和
 n = 100
 sum1 = 0
 counter1 = 1
-while counter1 <= n :
+while counter1 <= n:
     sum1 = sum1 + counter1
     counter1 += 1
-print("1 到 %d 之和为：%d"%( n , sum1))
+print("1 到 %d 之和为：%d" % (n, sum1))
 
-
-#while 中使用break:
+# while 中使用break:
 n1 = 5
 while n1 > 0:
-    n1 +=1
+    n1 += 1
     if n1 >= 200:
         break
     print(n1)
 print("While is over")
 
-
-#在while中使用continue:
+# 在while中使用continue:
 n2 = 500
 while n2 > 0:
     n2 -= 1
@@ -163,8 +156,7 @@
     print(n2)
 print("While is over")
 
-
-#for 循环语句
+# for 循环语句
 sites11 = ["Baidu", "Google", "Runoob", "Taobao"]
 for site in sites11:
     print(site)
@@ -176,8 +168,7 @@
 for number in range(1, 11):
     print(number)
 
-
 for x in range(101):
     print(x)
 else:
-    print("Finally finished!")
\ No newline at end of file
+    print("Finally finished!")
